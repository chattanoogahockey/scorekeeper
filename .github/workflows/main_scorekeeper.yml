# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: 'Build and deploy Node.js app to Azure Web App: scorekeeper'

on:
  push:
    branches:
    - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Fetch full git history
      run: |
        git fetch --unshallow --tags || true

    - name: Set deployment timestamp
      run: echo "DEPLOYMENT_TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)" >> $GITHUB_ENV

    - name: Set up Node.js version
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Clean and install dependencies
      run: |
        rm -rf node_modules
        npm install
    
    - name: Build frontend
      run: |
        cd frontend
        npm install
        # Generate version info with deployment timestamp
        NODE_ENV=production node generate-version.js
        npm run build
    
    - name: Install backend dependencies
      run: |
        cd backend  
        npm install --production
    
    - name: Create deployment package
      run: |
        mkdir -p deploy
        # Copy backend files to root of deploy
        cp -r backend/* deploy/
        # CRITICAL: Copy backend node_modules to deploy
        cp -r backend/node_modules deploy/node_modules
        # CRITICAL: Copy built frontend to where backend serves it
        rm -rf deploy/frontend
        mkdir -p deploy/frontend
        cp -r frontend/dist/* deploy/frontend/
        # Copy root package.json and web.config
        cp package.json deploy/
        cp web.config deploy/
        # Verify frontend was copied correctly
        echo "Frontend files copied:"
        ls -la deploy/frontend/
        # Verify node_modules copied
        echo "Backend dependencies copied:"
        ls -la deploy/node_modules/ | head -10
    
    - name: 'Deploy to Azure Web App'
      uses: azure/webapps-deploy@v3
      with: 
        app-name: 'scorekeeper'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_aa98474905f14a53afdc3e9da94e0ae4 }}
        package: './deploy'

    - name: Verify deployment
      run: |
        # Wait a moment for deployment to complete
        sleep 30
        # Check health endpoint
        curl -sSf https://scorekeeper.azurewebsites.net/api/health || echo "Health check failed"
        # Check version endpoint and verify it matches package.json
        curl -sSf https://scorekeeper.azurewebsites.net/api/version | tee /tmp/version.json
        if command -v jq > /dev/null; then
          DEPLOYED_VERSION=$(jq -r .version /tmp/version.json)
          PACKAGE_VERSION=$(jq -r .version package.json)
          echo "Deployed version: $DEPLOYED_VERSION"
          echo "Package version: $PACKAGE_VERSION"
          if [ "$DEPLOYED_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "ERROR: Version mismatch!"
            exit 1
          fi
          echo "âœ… Version verification successful"
        else
          echo "jq not available, skipping version verification"
        fi
