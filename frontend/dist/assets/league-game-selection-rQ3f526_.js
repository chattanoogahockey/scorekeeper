import{G as T,j as s}from"./index-CRuzh1EF.js";import{u as P,b as f}from"./react-vendor-6tIi07-H.js";import{a as g}from"./ui-vendor-NIGUFBhG.js";function O(){const x=P(),{setSelectedDivision:N,setSelectedGame:w,reset:D,setRosters:j}=f.useContext(T),[S,R]=f.useState([]),[y,C]=f.useState(!0),[v,b]=f.useState(null),[$,I]=f.useState(new Date),h="";f.useEffect(()=>{D();const t=new AbortController,r=async()=>{C(!0),b(null);try{const c=Math.random().toString(36).substr(2,9);console.log("🔄 Fetching upcoming games (today + 6 days) for faster loading...");const a=await g.get(`${h}/api/games`,{params:{division:"all",includeUpcoming:"true",rid:c},timeout:1e4,signal:t.signal});console.log("✅ Games API response received:",a.status,"games in response");let o=[];a.data.success&&a.data.data&&Array.isArray(a.data.data)?(o=a.data.data,console.log("📊 Using new standardized API format, found",o.length,"games")):Array.isArray(a.data)?(o=a.data,console.log("📊 Using legacy array format, found",o.length,"games")):a.data.games&&Array.isArray(a.data.games)?(o=a.data.games,console.log("📊 Using legacy games property format, found",o.length,"games")):a.data.value&&Array.isArray(a.data.value)?(o=a.data.value,console.log("📊 Using legacy value property format, found",o.length,"games")):(console.warn("⚠️ Unexpected response format:",a.data),o=[]);let p=new Set;try{const e=await g.get(`${h}/api/games/submitted`);let n=[];e.data.success&&e.data.data&&Array.isArray(e.data.data)?n=e.data.data:Array.isArray(e.data)?n=e.data:e.data.data&&Array.isArray(e.data.data)?n=e.data.data:e.data.value&&Array.isArray(e.data.value)&&(n=e.data.value),p=new Set(n.map(l=>l.id)),console.log("📝 Found",p.size,"submitted games to exclude")}catch(e){console.warn("⚠️ Could not fetch submitted games, assuming none:",e.message),p=new Set}const A=o.filter(e=>{const n=e.id,l=e.homeTeam,i=e.awayTeam,d=l&&i&&l.trim()!==""&&i.trim()!==""&&l!=="vs"&&i!=="vs",u=!p.has(n);return d&&u});R(A),b(null)}catch(c){if(c.name==="CanceledError"){console.log("🚫 Request cancelled");return}console.error("❌ Failed to load games:",c),console.error("Error details:",c.response?.data||c.message);const a=c.response?.data;let o="Failed to load games from server.";a?.success===!1&&a?.error?(o=a.error.message||o,a.error.code==="DATABASE_ERROR"&&(o+=" Database temporarily unavailable."),a.error.code==="VALIDATION_ERROR"&&(o+=" Invalid request parameters."),o+=" Please try refreshing the page."):a?.error&&typeof a=="object"?(o=a.message||o,a.code==="DB_UNAVAILABLE"&&(o+=" Database temporarily unavailable."),a.canRetry&&(o+=" Please try refreshing the page.")):(o=a?.error||a?.message||o,o+=" Please refresh the page."),b(o),R([])}finally{C(!1)}};r();const m=setInterval(r,3e5);return()=>{console.log("🧹 Cleaning up LeagueGameSelection component"),t.abort(),clearInterval(m)}},[]),f.useEffect(()=>{const t=setInterval(()=>{I(new Date)},1e3);return()=>clearInterval(t)},[]);const E=t=>{if(!t)return"Date TBD";try{const r=new Date(t);return isNaN(r.getTime())?"Invalid Date":r.toLocaleDateString("en-US",{weekday:"short",year:"numeric",month:"short",day:"numeric",hour:"2-digit",minute:"2-digit"})}catch{return"Invalid Date"}},G=async t=>{try{const r=t.id;console.log("📋 Checking game status for gameId:",r),console.log("🥅 Checking for existing goals...");let m=[];try{const e=await g.get(`${h}/api/goals`,{params:{gameId:r},headers:{"Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache",Expires:"0"}});e.data.success&&e.data.data?m=e.data.data||[]:m=e.data||[]}catch(e){console.warn("⚠️ Could not check existing goals, assuming none:",e.message),m=[]}console.log(`Found ${m.length} existing goals`),console.log("🚫 Checking for existing penalties...");let c=[];try{const e=await g.get(`${h}/api/penalties`,{params:{gameId:r},headers:{"Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache",Expires:"0"}});e.data.success&&e.data.data?c=e.data.data||[]:c=e.data||[]}catch(e){console.warn("⚠️ Could not check existing penalties, assuming none:",e.message),c=[]}console.log(`Found ${c.length} existing penalties`),console.log("🎯 Checking for existing shots on goal...");let a={home:0,away:0};try{const e=`${h}/api/shots-on-goal/game/${r}`,n=await g.get(e,{headers:{"Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache",Expires:"0"}});n.data.success&&n.data.data?a=n.data.data||{home:0,away:0}:a=n.data||{home:0,away:0}}catch(e){console.warn("⚠️ Could not check existing shots, assuming none:",e.message),a={home:0,away:0}}const o=(a.home||0)+(a.away||0);if(console.log(`Found ${o} existing shots on goal (home: ${a.home}, away: ${a.away})`),m.some(e=>e.gameStatus==="submitted")||c.some(e=>e.gameStatus==="submitted")){alert("This game has already been submitted and finalized. You cannot continue scoring.");return}if(m.length>0||c.length>0||o>0)if(window.confirm(`This game has existing data (${m.length} goals, ${c.length} penalties, ${o} shots).

Click OK to continue where you left off, or Cancel to start over.`)){console.log("🎯 User chose to continue existing game - going to in-game menu"),console.log("🔄 Loading rosters for continuing game, gameId:",r);const n=await g.get(`${h}/api/rosters`,{params:{gameId:r},headers:{"Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache",Expires:"0"}});console.log("✅ Rosters response for continuing game:",n.status,n.data);const l=n.data?.data||n.data||[];if(console.log("📋 Number of rosters for continuing game:",l.length),l.length===0){console.error("❌ No rosters found for continuing game"),alert("No rosters found for this game. Cannot continue without team rosters.");return}const i=l.map(d=>({teamName:d.teamName,teamId:d.teamName,players:d.players.map(u=>({name:u.name,firstName:u.firstName||u.name.split(" ")[0],lastName:u.lastName||u.name.split(" ").slice(1).join(" "),jerseyNumber:u.jerseyNumber,position:u.position||"Player"}))}));console.log("🎯 Setting context before navigation..."),N(t.division),j(i),w(t);try{sessionStorage.setItem("selectedGame",JSON.stringify(t)),sessionStorage.setItem("selectedRosters",JSON.stringify(i))}catch(d){console.warn("⚠️ Failed to write session storage for game/rosters",d)}console.log("🎯 Scheduling navigation to in-game menu..."),setTimeout(()=>{console.log("🎯 NOW navigating to in-game menu with state:",{game:t,rosters:i,bypassedRoster:!0}),x("/ingame",{state:{game:t,rosters:i,bypassedRoster:!0},replace:!0})},100);return}else{if(!window.confirm("Are you sure you want to start over? This will permanently delete all existing goals, penalties, and shots for this game."))return;try{console.log("🧹 Clearing existing game data...");for(const l of m)await g.delete(`/api/goals/${l.id}`,{params:{gameId:r}});for(const l of c)await g.delete(`/api/penalties/${l.id}`,{params:{gameId:r}});if(o>0){const i=`/api/shots-on-goal/${(a.id?a:{id:`shots_${r}`}).id}`;await g.delete(i,{params:{gameId:r}})}console.log("✅ Game data cleared successfully"),alert("Game data cleared. Starting fresh with roster attendance.")}catch(l){console.error("❌ Error clearing game data:",l),alert("Failed to clear game data. Please try again.");return}}console.log("🆕 Starting new game or fresh start - proceeding to roster attendance"),w(t),N(t.division);try{console.log("🔄 Loading rosters for gameId:",r),console.log("🔗 Roster API URL:",`${h}/api/rosters?gameId=${r}`);const e=await g.get(`${h}/api/rosters`,{params:{gameId:r},headers:{"Cache-Control":"no-cache, no-store, must-revalidate",Pragma:"no-cache",Expires:"0"}});console.log("✅ Rosters API response:",e.status,e.data);const n=e.data?.data||e.data||[];if(console.log("📋 Number of rosters loaded:",n.length),n.length===0){console.warn("⚠️ No rosters found for this game. Teams may not have rosters uploaded."),alert(`No rosters found for this game.

Game: ${t.homeTeam} vs ${t.awayTeam}

Please ensure both teams have uploaded their rosters before starting the game.`);return}const l=n.map(i=>(console.log(`📝 Processing roster for team: ${i.teamName} (${i.players.length} players)`),{teamName:i.teamName,teamId:i.teamName,players:i.players.map(d=>({name:d.name,firstName:d.firstName||d.name.split(" ")[0],lastName:d.lastName||d.name.split(" ").slice(1).join(" "),jerseyNumber:d.jerseyNumber,position:d.position||"Player"}))}));j(l),console.log("✅ Rosters set in context:",l.length,"teams");try{sessionStorage.setItem("selectedRosters",JSON.stringify(l)),console.log("✅ Rosters saved to sessionStorage")}catch(i){console.warn("⚠️ Failed to save rosters to sessionStorage:",i)}}catch(e){console.error("❌ Failed to preload rosters:",e),e.response?(console.error("Response status:",e.response.status),console.error("Response data:",e.response.data),e.response.status===500?alert(`Failed to load rosters (Server Error).

This may mean:
- The teams don't have rosters uploaded
- There's a database issue

Error: ${e.response.data?.error||e.message}`):e.response.status===404?alert(`Game or rosters not found.

Please ensure both teams have uploaded their rosters before starting the game.`):alert(`Failed to load rosters: ${e.response.data?.error||e.message}`)):alert(`Network error loading rosters: ${e.message}`);return}x("/roster")}catch(r){console.error("❌ Error during game selection:",r),r.response?.status===404?alert("Game not found. Please try selecting a different game."):r.response?.status>=500?alert("Server error. Please try again in a moment."):alert("Failed to load game data. Please try again.")}};return s.jsxs("div",{className:"min-h-screen flex flex-col items-center p-4",children:[s.jsx("div",{className:"w-full max-w-4xl mb-6",children:s.jsxs("div",{className:"flex justify-between items-center",children:[s.jsx("div",{className:"flex items-center",children:s.jsx("button",{onClick:()=>x("/"),className:"bg-gradient-to-r from-blue-700 to-blue-800 hover:from-blue-800 hover:to-blue-900 text-white font-bold py-2 px-4 rounded-lg mr-4 transition-all duration-200",children:"← Back to Menu"})}),s.jsx("div",{className:"flex-1 text-center",children:s.jsx("h1",{className:"text-2xl font-bold",children:"Select Game"})}),s.jsxs("div",{className:"text-right",children:[s.jsx("div",{className:"text-lg font-semibold",children:$.toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})}),s.jsx("div",{className:"text-sm text-gray-600",children:$.toLocaleDateString()})]})]})}),y&&s.jsx("p",{className:"text-lg",children:"Loading upcoming games..."}),v&&s.jsx("p",{className:"text-red-500 text-lg",children:v}),!y&&!v&&s.jsxs(s.Fragment,{children:[s.jsx("div",{className:"w-full max-w-4xl mb-4 text-center",children:s.jsx("div",{className:"bg-blue-50 border border-blue-200 rounded-lg p-3",children:s.jsxs("p",{className:"text-blue-700 text-sm",children:["📅 Showing games for today through ",new Date(Date.now()+8640*60*1e3).toLocaleDateString(),s.jsx("span",{className:"text-blue-600",children:" (next 7 days)"})]})})}),s.jsxs("div",{className:"grid md:grid-cols-2 gap-4 w-full max-w-4xl",children:[S.map(t=>s.jsxs("div",{className:"border rounded-lg shadow-md p-6 hover:shadow-lg transition-all duration-200",children:[s.jsx("div",{className:"mb-3",children:s.jsxs("h3",{className:"text-xl font-semibold text-gray-800",children:[t.awayTeam," vs ",t.homeTeam]})}),s.jsxs("div",{className:"space-y-2 text-sm mb-4",children:[s.jsxs("p",{className:"text-gray-600",children:[s.jsx("span",{className:"font-medium",children:"Date:"})," ",E(t.gameDate||t.date)]}),t.division&&s.jsxs("p",{className:"text-gray-600",children:[s.jsx("span",{className:"font-medium",children:"Division:"})," ",t.division]}),s.jsxs("p",{className:"text-gray-500",children:[s.jsx("span",{className:"font-medium",children:"Status:"})," ",t.status||"Scheduled"]}),t.location&&s.jsxs("p",{className:"text-gray-600",children:[s.jsx("span",{className:"font-medium",children:"Location:"})," ",t.location]})]}),s.jsx("div",{className:"flex justify-center",children:s.jsx("button",{onClick:()=>G(t),className:"bg-gradient-to-r from-blue-700 to-blue-800 hover:from-blue-800 hover:to-blue-900 text-white font-bold py-2 px-6 rounded-lg shadow-lg transition-all duration-200",children:"Select Game"})})]},t.id||t.gameId)),!y&&S.length===0&&s.jsxs("div",{className:"col-span-2 text-center py-8",children:[s.jsx("p",{className:"text-gray-500 text-lg",children:"No games available for the next 7 days"}),s.jsx("p",{className:"text-gray-400 text-sm mt-2",children:"Games are filtered to show only upcoming games (today + 6 days)"})]})]})]})]})}export{O as default};
